

# This file was *autogenerated* from the file exploiting_decryption_failures.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_976 = Integer(976); _sage_const_2 = Integer(2); _sage_const_16 = Integer(16); _sage_const_10 = Integer(10); _sage_const_1p52587890625en05 = RealNumber('1.52587890625e-05'); _sage_const_9 = Integer(9); _sage_const_9p1552734375en05 = RealNumber('9.1552734375e-05'); _sage_const_8 = Integer(8); _sage_const_0p0004425048828125 = RealNumber('0.0004425048828125'); _sage_const_7 = Integer(7); _sage_const_0p001800537109375 = RealNumber('0.001800537109375'); _sage_const_6 = Integer(6); _sage_const_0p00604248046875 = RealNumber('0.00604248046875'); _sage_const_5 = Integer(5); _sage_const_0p0167999267578125 = RealNumber('0.0167999267578125'); _sage_const_4 = Integer(4); _sage_const_0p0388336181640625 = RealNumber('0.0388336181640625'); _sage_const_3 = Integer(3); _sage_const_0p074493408203125 = RealNumber('0.074493408203125'); _sage_const_0p118621826171875 = RealNumber('0.118621826171875'); _sage_const_1 = Integer(1); _sage_const_0p1568145751953125 = RealNumber('0.1568145751953125'); _sage_const_0p172088623046875 = RealNumber('0.172088623046875'); _sage_const_256 = Integer(256); _sage_const_p265 = RealNumber('.265')
load("../framework/instance_gen.sage")

verbosity = _sage_const_0 
report_every = None

"""  Example
Uncomment the following to get the detailed computation
"""
# verbosity = 2
# report_every = 20

# FRODOKEM parameters
n = _sage_const_976 
m = _sage_const_976 
q = _sage_const_2 **_sage_const_16 
t = q / _sage_const_16 
D_s = {- _sage_const_10 : _sage_const_1p52587890625en05 , - _sage_const_9 : _sage_const_9p1552734375en05 , - _sage_const_8 : _sage_const_0p0004425048828125 ,
       - _sage_const_7 : _sage_const_0p001800537109375 , - _sage_const_6 : _sage_const_0p00604248046875 , - _sage_const_5 : _sage_const_0p0167999267578125 ,
       - _sage_const_4 : _sage_const_0p0388336181640625 , - _sage_const_3 : _sage_const_0p074493408203125 , - _sage_const_2 : _sage_const_0p118621826171875 ,
       - _sage_const_1 : _sage_const_0p1568145751953125 , _sage_const_0 : _sage_const_0p172088623046875 , _sage_const_1 : _sage_const_0p1568145751953125 ,
       _sage_const_2 : _sage_const_0p118621826171875 , _sage_const_3 : _sage_const_0p074493408203125 , _sage_const_4 : _sage_const_0p0388336181640625 ,
       _sage_const_5 : _sage_const_0p0167999267578125 , _sage_const_6 : _sage_const_0p00604248046875 , _sage_const_7 : _sage_const_0p001800537109375 ,
       _sage_const_8 : _sage_const_0p0004425048828125 , _sage_const_9 : _sage_const_9p1552734375en05 , _sage_const_10 : _sage_const_1p52587890625en05 }
D_e = D_s
_, var = average_variance(D_s)
d = n + m
ell = RR(sqrt(d * var))

# nu2 = RR(var * ell**4 / (t**2))
# for k in [0, 1, 2, 4, 8, 16, 32, 64, 128, 256]:
#     xx = 1 / (1 / var + k / nu2)
#     print(k, RR(xx / var))

covh = RR(var * ell**_sage_const_4  / (t**_sage_const_2 )) * identity_matrix(d)

_, _, inst = initialize_from_LWE_instance(DBDD_predict_diag, n, q,
                                          m, D_e, D_s, verbosity=verbosity)

print("# failures, relative variance, bit-security (1 bit = 0.265 bikz) ")
for i in range(_sage_const_0 , _sage_const_256 ):
    if report_every is not None:
        inst.integrate_q_vectors(q, indices=range(d),
                                 report_every=report_every)
    else:
        inst.integrate_q_vectors(q, indices=range(d))
    print(i, ",\t \t \t", inst.S[_sage_const_0 ] / var, ",\t \t \t", inst.beta * _sage_const_p265 )
    inst.integrate_approx_hint_fulldim(None, covh)

